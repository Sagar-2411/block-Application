<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.repository.UserRepo"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.exceptions.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.security.CustomUserDetailService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authorization.AuthorityAuthorizationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.boot.CommandLineRunner"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="javax.websocket.server.ServerEndpoint"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.AuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="javax.servlet.http.HttpServletResponse"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.JwtHandler"/>
    <fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.ExpiredJwtException"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.MalformedJwtException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.security.JwtAuthenticationEntryPoint"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.security.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.security.JwtAuthResponse"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PostAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.payload.JwtAuthRequest"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.security.JwtTokenHelper"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.DisabledException"/>
    <fullyQualifiedTypeName name="javax.security.auth.message.callback.PrivateKeyCallback.Request"/>
    <fullyQualifiedTypeName name="javax.security.auth.message.callback.SecretKeyCallback.Request"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="com.codewithdurgesh.blog.payload.JwtAuthResponse"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.BadCredentialsException"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.jboss.logging.Logger"/>
    <fullyQualifiedTypeName name="org.apache.logging.log4j.Logger"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.Layout"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.Appender"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.FileAppender"/>
    <fullyQualifiedTypeName name="ch.qos.logback.classic.log4j.XMLLayout"/>
</qualifiedTypeNameHistroy>
